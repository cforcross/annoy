name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  pre-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install

      - name: Run pre-commit hooks
        uses: pre-commit/action@v3.0.0
        with:
            extra_args: terraform_fmt --all-files

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install

      - name: Lint
        run: npm run lint

  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  snyk:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install

      - name: Snyk Security Scan
        uses: snyk/actions/node@master
        env:
            SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
            command: monitor

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install

      - name: Build and push Docker image
        run: |
          echo ${{ secrets.AWS_ACCESS_KEY_ID }} | docker login -u AWS --password-stdin ${{ secrets.AWS_REGISTRY_URL }}
          docker build -t ${{ secrets.AWS_REGISTRY_URL }}/your-repo-name:latest .
          docker push ${{ secrets.AWS_REGISTRY_URL }}/your-repo-name:latest

  sonarqube:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}

      - name: Install dependencies
        run: npm install
  
  Checkov:
    runs-on: ubuntu-latest
    steps:
        - name:  Checkov GitHub Action
          uses: bridgecrewio/checkov-action@v12
          with:
            output_format: cli,sarif
            output_file_path: console,results.sarif
        - name: Upload SARIF file
          uses: github/codeql-action/upload-sarif@v2
          if: success() || failure()
          with:
            sarif_file: results.sarif

     
